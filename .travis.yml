language: rust
sudo: true
cache: cargo
os:
  - linux
#  - osx  CodeCov doesn't support it so it's non tested now.
# Include needeed packages (Codecov)
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev

matrix:
  fast_finish: false
  include:
  - rust: stable
    script:
      # Run tests/builds
      - cargo check
      - cargo build --release --verbose --all
      - cargo test --release --verbose --all
      
  
  - rust: nightly
    script:
      # Run tests/builds
      - cargo check
      - cargo build --release --verbose --all
      - cargo test --release --verbose --all
      # Build docs
      - cargo doc --no-deps --features nightly_docs


# Send a notification to the Dusk build Status Telegram channel once the CI build completes
after_script:
  - bash <(curl -s https://raw.githubusercontent.com/dusk-network/tools/master/bash/telegram_ci_notifications.sh)

# Upload docs
after_success:
- |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "nightly" && "$TRAVIS_PULL_REQUEST" = "false" && "$TRAVIS_BRANCH" == "master" ]]; then
        cargo doc --no-deps --features nightly_docs &&
        echo "<meta http-equiv=refresh content=0;url=hades252/index.html>" > target/doc/index.html &&
        git clone https://github.com/davisp/ghp-import.git &&
        ./ghp-import/ghp_import.py -n -p -f -m "Documentation update." -r https://"$GH_TOKEN"@github.com/"$TRAVIS_REPO_SLUG.git" target/doc &&
        echo "Uploaded documentation"
      fi

# Coverage report
 - |
     if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
       wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
       tar xzf master.tar.gz &&
       cd kcov-master &&
       mkdir build &&
       cd build &&
       cmake .. &&
       make &&
       sudo make install &&
       cd ../.. &&
       rm -rf kcov-master &&
       for file in target/debug/hades252-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
       bash <(curl -s https://codecov.io/bash) &&
       echo "Uploaded code coverage"
     fi